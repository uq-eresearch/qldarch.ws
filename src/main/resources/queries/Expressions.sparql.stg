delimiters "$", "$"

confirmExpressionIds(ids) ::= <<
PREFIX : <http://qldarch.net/ns/rdf/2012-06/terms#>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
select distinct ?r  where {
    {
      graph <http://qldarch.net/rdf/2013-09/catalog> {
        ?u <http://qldarch.net/ns/rdf/2013-09/catalog#hasExpressionGraph> ?g.
      } .
    } UNION {
      BIND ( <http://qldarch.net/rdf/2012/12/resources#> AS ?g ) .
    }
    graph ?g {
        ?e a ?t .
        BIND (?e AS ?r) .
    }
} BINDINGS ?e { $ids:usingBinding(); separator=" "$ }
>>

searchByLabelIds(searchString, types, restrictType) ::= <<
PREFIX :<http://qldarch.net/ns/rdf/2012-06/terms#>
PREFIX rdfs:<http://www.w3.org/2000/01/rdf-schema#>
select distinct ?s ?p ?o where  {
  {
    graph <http://qldarch.net/rdf/2013-09/catalog> {
      ?u <http://qldarch.net/ns/rdf/2013-09/catalog#hasExpressionGraph> ?g.
    } .
  } UNION {
    BIND ( <http://qldarch.net/rdf/2012/12/resources#> AS ?g ) .
  } .
  graph ?g {
    ?s ?p ?o .
  } .
  $if(restrictType)$$restrictToType()$$endif$
  {
    graph ?g {
      ?s <http://qldarch.net/ns/rdf/2012-06/terms#label> ?label .
    } .
  } UNION {
    graph ?g {
      ?s <http://www.w3.org/2000/01/rdf-schema#label> ?label .
    } .
  }
  FILTER regex(?label, "$searchString$", "i").
} $if(restrictType)$$typeBindings(types)$$endif$
>>

restrictToType() ::= <<
graph ?g {
   	?s a ?transType .
} .
{
    BIND ( ?type AS ?transType ) .
} . 
>>

typeBindings(types) ::= <<
BINDINGS ?type { $types:usingBinding(); separator=" "$ }
>>

usingBinding(binding) ::= <<
( <$binding$> )
>>